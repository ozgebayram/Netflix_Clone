

 1. Question text;
Given a non-empty string and an int n, return a new string
 where the character at index n has been removed. 
The value of n will be a valid index of a character 
in the original string (i.e. n will be in the range 0....len(str)-1 inclusive).

def missing_char(word, n):

 return word[0:n] + word[n+1: len(word)]

missing_char("kitchen",2)


2.)Given two integer values, return their sum. If the two values are the same, then return double their sum.

def sum_double(x, y):
  if x == y:
    return (x + y) * 2
  else:
    return x + y

sum_double(5, 5)


3.)We have a loud talking parrot. We are in trouble if the parrot is talking and the hour is before 6 or after 21.
Define a function taking two parameters (talking and hour) to return True if we are in trouble. 
The argument to  talking parameter can only be True or False whether it is talking or not.
 The argument to hour parameter should be the current hour time in the range of 0 to 23.


def parrot_trouble(talking,hour):
  if talking == True and hour in range(0,7):
    return True
  elif  talking == True and hour in range(21,24):
    return True
  elif talking == False or hour in range(7,21):
    return False
parrot_trouble(True,5)


4.)Define a function to take a word and return negative meaning.
Given a word, return a new word where "not " has been added to the front.
 However, if the word already begins with "not", return the string unchanged.


def not_string(word):
  if "not" in word:
    return (word) 
  elif not "not" in word:
    return('not {}'.format(word))














